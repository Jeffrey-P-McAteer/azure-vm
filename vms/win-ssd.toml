
[install]
boot_iso = "/mnt/scratch/vms/Win11_23H2_English_x64v2.iso"

# NOTE: works "fine":
#  qemu-system-x86_64 -drive id=root_disk,format=raw,file=/dev/sdd -enable-kvm -m 18128M -cpu host -machine q35,accel=kvm -drive if=pflash,format=raw,readonly=on,file=/usr/share/edk2-ovmf/x64/OVMF_CODE.fd -drive if=pflash,format=raw,file=/tmp/OVMF_VARS.fd -boot c -display gtk -device qemu-xhci -device usb-kbd -device usb-tablet

[vm]
name = "Windows-SSK-SSD"
mount_windows_virtio_iso = true
#disk_partuuid = "e37867c5-1e8a-41e6-8877-d337cb7ed435" # Looked up + the disk holding this partition is what's booted; ie blkid /dev/sda1
disk_partuuid = "42819004-f95d-4a07-8064-7a34ea3cda37"
ram_mb = 18128
#ram_mb = 26256

# windows 10/11 wants a BIOS declaring support for secure boot; when empty we can specify details in addtl_args[]
# bios_override = "/usr/share/edk2-ovmf/x64/OVMF_CODE.secboot.fd"
bios_override = ""

#root_disk_if_override = "virtio"
#root_disk_if_override = "none,discard=unmap,aio=native,cache=none"
root_disk_if_override = ""

# Needs to be "off" if we're using GTK GUI w/ "-disply gtk"
# spice_gl_override = "off"
#smp_override = "8,sockets=1,cores=8"
smp_override = "1"

# The "-cpu" addtl arguments enable hyper-v enlightenments, fast primitives that windows understands much like KVM!
#cpu_override = "host,hv_vapic,hv_relaxed,hv_vpindex,hv_time,hv_synic,hv_stimer,hv_tlbflush,hv_ipi,hv_frequencies,hv_avic,hv_xmm_input,hv_tlbflush_ext"
cpu_override = "host"

# q35 is necessary for modern EFI stuffs
#machine_override = "q35,accel=kvm,kernel_irqchip=on"
machine_override = "q35,accel=kvm"

# Appended to qemu command
addtl_args = [

#  "-device", "virtio-scsi-pci,id=scsi0",
#  "-device", "scsi-hd,drive=root_disk,bus=scsi0.0",
  "-boot", "c",

#  "-device", "ahci,id=ahci", # root_disk always points to our disk_partuuid-selected device's parent
#  "-device", "ide-hd,drive=root_disk,bus=ahci.0",

#  "-device", "nec-usb-xhci,id=xhci", # these 2 lines are an act of desperation - and windows still fails to boot even when inserted as a USB drive
#  "-device", "usb-storage,bus=xhci.0,drive=root_disk",


# Temporary install/recovery media
#   "-boot", "d", "-drive", "file=/mnt/scratch/vms/Win11_23H2_English_x64v2.iso,media=cdrom,readonly=on",
#   "-display", "gtk",

  # USB keyboard & mouse grab-bag of hardware
  "-device", "qemu-xhci", "-device", "usb-kbd", "-device", "usb-tablet",

  # Windows 11 Secure-Boot firmware
  "-drive", "if=pflash,format=raw,readonly=on,file=/usr/share/edk2-ovmf/x64/OVMF_CODE.secboot.fd",
# Remember to run:
#    cp /usr/share/edk2-ovmf/x64/OVMF_VARS.fd /tmp/
  "-drive", "if=pflash,format=raw,file=/tmp/OVMF_VARS.fd",

# These require inputs provided by preboot_cmds below; this does the windows 11-required TPM hardware config
  "-chardev", "socket,id=chrtpm,path=/tmp/tpm/swtpm-sock",
  "-tpmdev", "emulator,id=tpm0,chardev=chrtpm",
  "-device", "tpm-tis,tpmdev=tpm0",

]

rdp_uname = "jeffrey"
rdp_pass = "Passw0rd!"

addtl_rdp_args = [
  # Run 'sudo opensc-tool --list-readers' for names
  #"/smartcard:Alcor Micro AU9540 00 00",
  "/smartcard:Alcor Link AK9563 00 00",

  # "/rfx",

]


# Every one of these is passed in-order to /bin/sh -c "VALUE"
# For this particular VM, they handle the secure-boot and TPMv2 virtualization stuff win11 wants.
preboot_cmds = [
  # "sudo modprobe qxl",
  "echo 1 | sudo tee /sys/module/kvm/parameters/ignore_msrs", # vastly improves reliability of windows boot!
  "mkdir -p /tmp/tpm",
  "cp /usr/share/edk2-ovmf/x64/OVMF_VARS.fd /tmp/",
  "swtpm socket --tpm2 --tpmstate dir=/tmp/tpm --ctrl type=unixio,path=/tmp/tpm/swtpm-sock",
]

